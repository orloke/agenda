networks:
  agenda_network:
    driver: bridge
    name: agenda_network

services:
  # # Backend (NestJS)
  api_agenda:
    container_name: api_agenda
    build:
      context: ./agenda-api
      target: production
    ports:
      - "${PORT_API}:${PORT_API}"
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - agenda_network

  # Frontend (Next.js)
  front_agenda:
    container_name: front_agenda
    build:
      context: ./agenda-front
      target: production
    ports:
      - "${PORT_FRONT}:${PORT_FRONT}"
    env_file:
      - .env
    depends_on:
      - api_agenda
    networks:
      - agenda_network

  # Banco de dados PostgreSQL
  db:
    image: postgres:15-alpine3.17
    container_name: db_postgres_agenda
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - agenda_network

